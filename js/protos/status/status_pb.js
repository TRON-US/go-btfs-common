// source: protos/status/status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_tron$us_go$btfs$common_protos_node_node_pb = require('../../github.com/tron-us/go-btfs-common/protos/node/node_pb.js');
goog.object.extend(proto, github_com_tron$us_go$btfs$common_protos_node_node_pb);
var github_com_tron$us_protobuf_gogoproto_gogo_pb = require('../../github.com/tron-us/protobuf/gogoproto/gogo_pb.js');
goog.object.extend(proto, github_com_tron$us_protobuf_gogoproto_gogo_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.status.AirdropRewardHistoryReq', null, global);
goog.exportSymbol('proto.status.BtfsScanAggrReq', null, global);
goog.exportSymbol('proto.status.Candidate', null, global);
goog.exportSymbol('proto.status.NodeContractStatReq', null, global);
goog.exportSymbol('proto.status.NodeDiscoveryAggrReq', null, global);
goog.exportSymbol('proto.status.NodeMetricsAggrReq', null, global);
goog.exportSymbol('proto.status.RewardInfo', null, global);
goog.exportSymbol('proto.status.RewardType', null, global);
goog.exportSymbol('proto.status.ScoreHistoryReq', null, global);
goog.exportSymbol('proto.status.SignedMetrics', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.SignedMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.SignedMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.SignedMetrics.displayName = 'proto.status.SignedMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.NodeMetricsAggrReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.NodeMetricsAggrReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.NodeMetricsAggrReq.displayName = 'proto.status.NodeMetricsAggrReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.NodeDiscoveryAggrReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.NodeDiscoveryAggrReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.NodeDiscoveryAggrReq.displayName = 'proto.status.NodeDiscoveryAggrReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.BtfsScanAggrReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.BtfsScanAggrReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.BtfsScanAggrReq.displayName = 'proto.status.BtfsScanAggrReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.ScoreHistoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.status.ScoreHistoryReq.repeatedFields_, null);
};
goog.inherits(proto.status.ScoreHistoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.ScoreHistoryReq.displayName = 'proto.status.ScoreHistoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.RewardInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.RewardInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.RewardInfo.displayName = 'proto.status.RewardInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.AirdropRewardHistoryReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.status.AirdropRewardHistoryReq.repeatedFields_, null);
};
goog.inherits(proto.status.AirdropRewardHistoryReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.AirdropRewardHistoryReq.displayName = 'proto.status.AirdropRewardHistoryReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.Candidate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.status.Candidate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.Candidate.displayName = 'proto.status.Candidate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.status.NodeContractStatReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.status.NodeContractStatReq.repeatedFields_, null);
};
goog.inherits(proto.status.NodeContractStatReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.status.NodeContractStatReq.displayName = 'proto.status.NodeContractStatReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.SignedMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.status.SignedMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.SignedMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.SignedMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicKey: msg.getPublicKey_asB64(),
    signature: msg.getSignature_asB64(),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.SignedMetrics}
 */
proto.status.SignedMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.SignedMetrics;
  return proto.status.SignedMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.SignedMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.SignedMetrics}
 */
proto.status.SignedMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublicKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.SignedMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.SignedMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.SignedMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.SignedMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes public_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.status.SignedMetrics.prototype.getPublicKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes public_key = 1;
 * This is a type-conversion wrapper around `getPublicKey()`
 * @return {string}
 */
proto.status.SignedMetrics.prototype.getPublicKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublicKey()));
};


/**
 * optional bytes public_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublicKey()`
 * @return {!Uint8Array}
 */
proto.status.SignedMetrics.prototype.getPublicKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublicKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.status.SignedMetrics} returns this
 */
proto.status.SignedMetrics.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes signature = 2;
 * @return {!(string|Uint8Array)}
 */
proto.status.SignedMetrics.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.status.SignedMetrics.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.status.SignedMetrics.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.status.SignedMetrics} returns this
 */
proto.status.SignedMetrics.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes payload = 3;
 * @return {!(string|Uint8Array)}
 */
proto.status.SignedMetrics.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payload = 3;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.status.SignedMetrics.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.status.SignedMetrics.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.status.SignedMetrics} returns this
 */
proto.status.SignedMetrics.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.NodeMetricsAggrReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.NodeMetricsAggrReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.NodeMetricsAggrReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeMetricsAggrReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.NodeMetricsAggrReq}
 */
proto.status.NodeMetricsAggrReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.NodeMetricsAggrReq;
  return proto.status.NodeMetricsAggrReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.NodeMetricsAggrReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.NodeMetricsAggrReq}
 */
proto.status.NodeMetricsAggrReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.NodeMetricsAggrReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.NodeMetricsAggrReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.NodeMetricsAggrReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeMetricsAggrReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.status.NodeMetricsAggrReq.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.NodeMetricsAggrReq} returns this
 */
proto.status.NodeMetricsAggrReq.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.NodeDiscoveryAggrReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.NodeDiscoveryAggrReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.NodeDiscoveryAggrReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeDiscoveryAggrReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.NodeDiscoveryAggrReq}
 */
proto.status.NodeDiscoveryAggrReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.NodeDiscoveryAggrReq;
  return proto.status.NodeDiscoveryAggrReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.NodeDiscoveryAggrReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.NodeDiscoveryAggrReq}
 */
proto.status.NodeDiscoveryAggrReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.NodeDiscoveryAggrReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.NodeDiscoveryAggrReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.NodeDiscoveryAggrReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeDiscoveryAggrReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.status.NodeDiscoveryAggrReq.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.NodeDiscoveryAggrReq} returns this
 */
proto.status.NodeDiscoveryAggrReq.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.BtfsScanAggrReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.BtfsScanAggrReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.BtfsScanAggrReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.BtfsScanAggrReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storageVolumeLeft: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    onlineMinersNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countryDistributeMap: (f = msg.getCountryDistributeMap()) ? f.toObject(includeInstance, undefined) : [],
    scoreDistributeMap: (f = msg.getScoreDistributeMap()) ? f.toObject(includeInstance, undefined) : [],
    timeCreated: (f = msg.getTimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    storageAlreadyUsed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    newRank: jspb.Message.getFieldWithDefault(msg, 10, ""),
    totalRank: jspb.Message.getFieldWithDefault(msg, 11, ""),
    contractAllCount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    contractFailCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    contractAllStorage: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    contractFailStorage: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    storageLeftWhenContract: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    superOnlineMinersCount: jspb.Message.getFieldWithDefault(msg, 17, 0),
    newOnlineMinersCount: jspb.Message.getFieldWithDefault(msg, 18, 0),
    minersAllAmount: jspb.Message.getFieldWithDefault(msg, 19, 0),
    totalMiners: jspb.Message.getFieldWithDefault(msg, 20, 0),
    bigMiners: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.BtfsScanAggrReq}
 */
proto.status.BtfsScanAggrReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.BtfsScanAggrReq;
  return proto.status.BtfsScanAggrReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.BtfsScanAggrReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.BtfsScanAggrReq}
 */
proto.status.BtfsScanAggrReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStorageVolumeLeft(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOnlineMinersNumber(value);
      break;
    case 4:
      var value = msg.getCountryDistributeMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    case 5:
      var value = msg.getScoreDistributeMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeCreated(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStorageAlreadyUsed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewRank(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalRank(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractAllCount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContractFailCount(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractAllStorage(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractFailStorage(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStorageLeftWhenContract(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSuperOnlineMinersCount(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNewOnlineMinersCount(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinersAllAmount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalMiners(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBigMiners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.BtfsScanAggrReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.BtfsScanAggrReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.BtfsScanAggrReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.BtfsScanAggrReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorageVolumeLeft();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getOnlineMinersNumber();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCountryDistributeMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getScoreDistributeMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getTimeCreated();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStorageAlreadyUsed();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNewRank();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTotalRank();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getContractAllCount();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getContractFailCount();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getContractAllStorage();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getContractFailStorage();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getStorageLeftWhenContract();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getSuperOnlineMinersCount();
  if (f !== 0) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = message.getNewOnlineMinersCount();
  if (f !== 0) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = message.getMinersAllAmount();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getTotalMiners();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getBigMiners();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.status.BtfsScanAggrReq.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double storage_volume_left = 2;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getStorageVolumeLeft = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setStorageVolumeLeft = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 online_miners_number = 3;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getOnlineMinersNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setOnlineMinersNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * map<string, int32> country_distribute = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.status.BtfsScanAggrReq.prototype.getCountryDistributeMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.clearCountryDistributeMap = function() {
  this.getCountryDistributeMap().clear();
  return this;};


/**
 * map<string, int32> score_distribute = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.status.BtfsScanAggrReq.prototype.getScoreDistributeMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.clearScoreDistributeMap = function() {
  this.getScoreDistributeMap().clear();
  return this;};


/**
 * optional google.protobuf.Timestamp time_created = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.status.BtfsScanAggrReq.prototype.getTimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
*/
proto.status.BtfsScanAggrReq.prototype.setTimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.clearTimeCreated = function() {
  return this.setTimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.status.BtfsScanAggrReq.prototype.hasTimeCreated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double storage_already_used = 7;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getStorageAlreadyUsed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setStorageAlreadyUsed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double price = 8;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.status.BtfsScanAggrReq.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
*/
proto.status.BtfsScanAggrReq.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.status.BtfsScanAggrReq.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string new_rank = 10;
 * @return {string}
 */
proto.status.BtfsScanAggrReq.prototype.getNewRank = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setNewRank = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string total_rank = 11;
 * @return {string}
 */
proto.status.BtfsScanAggrReq.prototype.getTotalRank = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setTotalRank = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional uint32 contract_all_count = 12;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getContractAllCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setContractAllCount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint32 contract_fail_count = 13;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getContractFailCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setContractFailCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional double contract_all_storage = 14;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getContractAllStorage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setContractAllStorage = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double contract_fail_storage = 15;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getContractFailStorage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setContractFailStorage = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional double storage_left_when_contract = 16;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getStorageLeftWhenContract = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setStorageLeftWhenContract = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional uint32 super_online_miners_count = 17;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getSuperOnlineMinersCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setSuperOnlineMinersCount = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional uint32 new_online_miners_count = 18;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getNewOnlineMinersCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setNewOnlineMinersCount = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 miners_all_amount = 19;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getMinersAllAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setMinersAllAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int64 total_miners = 20;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getTotalMiners = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setTotalMiners = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 big_miners = 21;
 * @return {number}
 */
proto.status.BtfsScanAggrReq.prototype.getBigMiners = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.BtfsScanAggrReq} returns this
 */
proto.status.BtfsScanAggrReq.prototype.setBigMiners = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.status.ScoreHistoryReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.ScoreHistoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.ScoreHistoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.ScoreHistoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.ScoreHistoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    scoresList: jspb.Message.toObjectList(msg.getScoresList(),
    github_com_tron$us_go$btfs$common_protos_node_node_pb.ScoreHistoryTab.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.ScoreHistoryReq}
 */
proto.status.ScoreHistoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.ScoreHistoryReq;
  return proto.status.ScoreHistoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.ScoreHistoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.ScoreHistoryReq}
 */
proto.status.ScoreHistoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_tron$us_go$btfs$common_protos_node_node_pb.ScoreHistoryTab;
      reader.readMessage(value,github_com_tron$us_go$btfs$common_protos_node_node_pb.ScoreHistoryTab.deserializeBinaryFromReader);
      msg.addScores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.ScoreHistoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.ScoreHistoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.ScoreHistoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.ScoreHistoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_tron$us_go$btfs$common_protos_node_node_pb.ScoreHistoryTab.serializeBinaryToWriter
    );
  }
};


/**
 * repeated node.ScoreHistoryTab scores = 1;
 * @return {!Array<!proto.node.ScoreHistoryTab>}
 */
proto.status.ScoreHistoryReq.prototype.getScoresList = function() {
  return /** @type{!Array<!proto.node.ScoreHistoryTab>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_tron$us_go$btfs$common_protos_node_node_pb.ScoreHistoryTab, 1));
};


/**
 * @param {!Array<!proto.node.ScoreHistoryTab>} value
 * @return {!proto.status.ScoreHistoryReq} returns this
*/
proto.status.ScoreHistoryReq.prototype.setScoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.node.ScoreHistoryTab=} opt_value
 * @param {number=} opt_index
 * @return {!proto.node.ScoreHistoryTab}
 */
proto.status.ScoreHistoryReq.prototype.addScores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.node.ScoreHistoryTab, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.status.ScoreHistoryReq} returns this
 */
proto.status.ScoreHistoryReq.prototype.clearScoresList = function() {
  return this.setScoresList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.RewardInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.status.RewardInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.RewardInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.RewardInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isSuspect: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    weight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    stake: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fileCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fileSize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    shouldReward: jspb.Message.getFieldWithDefault(msg, 9, 0),
    actualReward: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.RewardInfo}
 */
proto.status.RewardInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.RewardInfo;
  return proto.status.RewardInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.RewardInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.RewardInfo}
 */
proto.status.RewardInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.status.RewardType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSuspect(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStake(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFileCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileSize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShouldReward(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActualReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.RewardInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.RewardInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.RewardInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.RewardInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsSuspect();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getStake();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getFileCount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getShouldReward();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getActualReward();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional RewardType type = 1;
 * @return {!proto.status.RewardType}
 */
proto.status.RewardInfo.prototype.getType = function() {
  return /** @type {!proto.status.RewardType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.status.RewardType} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string node_id = 2;
 * @return {string}
 */
proto.status.RewardInfo.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_suspect = 4;
 * @return {boolean}
 */
proto.status.RewardInfo.prototype.getIsSuspect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setIsSuspect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 weight = 5;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 stake = 6;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getStake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setStake = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 file_count = 7;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getFileCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setFileCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 file_size = 8;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setFileSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 should_reward = 9;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getShouldReward = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setShouldReward = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 actual_reward = 10;
 * @return {number}
 */
proto.status.RewardInfo.prototype.getActualReward = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.RewardInfo} returns this
 */
proto.status.RewardInfo.prototype.setActualReward = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.status.AirdropRewardHistoryReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.AirdropRewardHistoryReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.AirdropRewardHistoryReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.AirdropRewardHistoryReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.AirdropRewardHistoryReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterPid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rewardsList: jspb.Message.toObjectList(msg.getRewardsList(),
    proto.status.RewardInfo.toObject, includeInstance),
    pageIndex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageTotal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dateAirdroped: (f = msg.getDateAirdroped()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.AirdropRewardHistoryReq}
 */
proto.status.AirdropRewardHistoryReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.AirdropRewardHistoryReq;
  return proto.status.AirdropRewardHistoryReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.AirdropRewardHistoryReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.AirdropRewardHistoryReq}
 */
proto.status.AirdropRewardHistoryReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterPid(value);
      break;
    case 2:
      var value = new proto.status.RewardInfo;
      reader.readMessage(value,proto.status.RewardInfo.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageIndex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageTotal(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateAirdroped(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.AirdropRewardHistoryReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.AirdropRewardHistoryReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.AirdropRewardHistoryReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.AirdropRewardHistoryReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequesterPid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.status.RewardInfo.serializeBinaryToWriter
    );
  }
  f = message.getPageIndex();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPageTotal();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDateAirdroped();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional string requester_pid = 1;
 * @return {string}
 */
proto.status.AirdropRewardHistoryReq.prototype.getRequesterPid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.setRequesterPid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RewardInfo rewards = 2;
 * @return {!Array<!proto.status.RewardInfo>}
 */
proto.status.AirdropRewardHistoryReq.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.status.RewardInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.status.RewardInfo, 2));
};


/**
 * @param {!Array<!proto.status.RewardInfo>} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
*/
proto.status.AirdropRewardHistoryReq.prototype.setRewardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.status.RewardInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.status.RewardInfo}
 */
proto.status.AirdropRewardHistoryReq.prototype.addRewards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.status.RewardInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};


/**
 * optional uint32 page_index = 3;
 * @return {number}
 */
proto.status.AirdropRewardHistoryReq.prototype.getPageIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.setPageIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 page_total = 4;
 * @return {number}
 */
proto.status.AirdropRewardHistoryReq.prototype.getPageTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.setPageTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp date_airdroped = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.status.AirdropRewardHistoryReq.prototype.getDateAirdroped = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
*/
proto.status.AirdropRewardHistoryReq.prototype.setDateAirdroped = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.clearDateAirdroped = function() {
  return this.setDateAirdroped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.status.AirdropRewardHistoryReq.prototype.hasDateAirdroped = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes signature = 6;
 * @return {!(string|Uint8Array)}
 */
proto.status.AirdropRewardHistoryReq.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes signature = 6;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.status.AirdropRewardHistoryReq.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.status.AirdropRewardHistoryReq.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.status.AirdropRewardHistoryReq} returns this
 */
proto.status.AirdropRewardHistoryReq.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.Candidate.prototype.toObject = function(opt_includeInstance) {
  return proto.status.Candidate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.Candidate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.Candidate.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dateAirdroped: (f = msg.getDateAirdroped()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.Candidate}
 */
proto.status.Candidate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.Candidate;
  return proto.status.Candidate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.Candidate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.Candidate}
 */
proto.status.Candidate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateAirdroped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.Candidate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.Candidate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.Candidate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.Candidate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDateAirdroped();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.status.Candidate.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.status.Candidate} returns this
 */
proto.status.Candidate.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp date_airdroped = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.status.Candidate.prototype.getDateAirdroped = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.status.Candidate} returns this
*/
proto.status.Candidate.prototype.setDateAirdroped = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.status.Candidate} returns this
 */
proto.status.Candidate.prototype.clearDateAirdroped = function() {
  return this.setDateAirdroped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.status.Candidate.prototype.hasDateAirdroped = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.status.NodeContractStatReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.status.NodeContractStatReq.prototype.toObject = function(opt_includeInstance) {
  return proto.status.NodeContractStatReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.status.NodeContractStatReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeContractStatReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeContractStatsList: jspb.Message.toObjectList(msg.getNodeContractStatsList(),
    github_com_tron$us_go$btfs$common_protos_node_node_pb.NodeContractStat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.status.NodeContractStatReq}
 */
proto.status.NodeContractStatReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.status.NodeContractStatReq;
  return proto.status.NodeContractStatReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.status.NodeContractStatReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.status.NodeContractStatReq}
 */
proto.status.NodeContractStatReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_tron$us_go$btfs$common_protos_node_node_pb.NodeContractStat;
      reader.readMessage(value,github_com_tron$us_go$btfs$common_protos_node_node_pb.NodeContractStat.deserializeBinaryFromReader);
      msg.addNodeContractStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.status.NodeContractStatReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.status.NodeContractStatReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.status.NodeContractStatReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.status.NodeContractStatReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeContractStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      github_com_tron$us_go$btfs$common_protos_node_node_pb.NodeContractStat.serializeBinaryToWriter
    );
  }
};


/**
 * repeated node.NodeContractStat node_contract_stats = 1;
 * @return {!Array<!proto.node.NodeContractStat>}
 */
proto.status.NodeContractStatReq.prototype.getNodeContractStatsList = function() {
  return /** @type{!Array<!proto.node.NodeContractStat>} */ (
    jspb.Message.getRepeatedWrapperField(this, github_com_tron$us_go$btfs$common_protos_node_node_pb.NodeContractStat, 1));
};


/**
 * @param {!Array<!proto.node.NodeContractStat>} value
 * @return {!proto.status.NodeContractStatReq} returns this
*/
proto.status.NodeContractStatReq.prototype.setNodeContractStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.node.NodeContractStat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.node.NodeContractStat}
 */
proto.status.NodeContractStatReq.prototype.addNodeContractStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.node.NodeContractStat, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.status.NodeContractStatReq} returns this
 */
proto.status.NodeContractStatReq.prototype.clearNodeContractStatsList = function() {
  return this.setNodeContractStatsList([]);
};


/**
 * @enum {number}
 */
proto.status.RewardType = {
  FILESIZE: 0,
  REPAIR: 1
};

goog.object.extend(exports, proto.status);
