// source: protos/score/score.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_tron$us_protobuf_gogoproto_gogo_pb = require('../../github.com/tron-us/protobuf/gogoproto/gogo_pb.js');
goog.object.extend(proto, github_com_tron$us_protobuf_gogoproto_gogo_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.score.Host', null, global);
goog.exportSymbol('proto.score.HostsData', null, global);
goog.exportSymbol('proto.score.HostsReq', null, global);
goog.exportSymbol('proto.score.HostsReq.Mode', null, global);
goog.exportSymbol('proto.score.HostsResp', null, global);
goog.exportSymbol('proto.score.Location', null, global);
goog.exportSymbol('proto.score.Node', null, global);
goog.exportSymbol('proto.score.Node.ExperimentalFlags', null, global);
goog.exportSymbol('proto.score.Node.Geo', null, global);
goog.exportSymbol('proto.score.Node.Settings', null, global);
goog.exportSymbol('proto.score.NodeRole', null, global);
goog.exportSymbol('proto.score.NodesReq', null, global);
goog.exportSymbol('proto.score.ResponseCode', null, global);
goog.exportSymbol('proto.score.RolesHostsReq', null, global);
goog.exportSymbol('proto.score.SettingsData', null, global);
goog.exportSymbol('proto.score.SettingsReq', null, global);
goog.exportSymbol('proto.score.SettingsResp', null, global);
goog.exportSymbol('proto.score.StatsReq', null, global);
goog.exportSymbol('proto.score.StatsResp', null, global);
goog.exportSymbol('proto.score.StorageStat', null, global);
goog.exportSymbol('proto.score.StorageStat.Host', null, global);
goog.exportSymbol('proto.score.StorageStat.HostStats', null, global);
goog.exportSymbol('proto.score.StorageStat.Renter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.NodesReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.score.NodesReq.repeatedFields_, null);
};
goog.inherits(proto.score.NodesReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.NodesReq.displayName = 'proto.score.NodesReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.SettingsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.SettingsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.SettingsReq.displayName = 'proto.score.SettingsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.SettingsResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.SettingsResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.SettingsResp.displayName = 'proto.score.SettingsResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.SettingsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.SettingsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.SettingsData.displayName = 'proto.score.SettingsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.HostsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.HostsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.HostsReq.displayName = 'proto.score.HostsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.RolesHostsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.RolesHostsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.RolesHostsReq.displayName = 'proto.score.RolesHostsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.HostsResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.HostsResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.HostsResp.displayName = 'proto.score.HostsResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StatsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StatsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StatsReq.displayName = 'proto.score.StatsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StatsResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StatsResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StatsResp.displayName = 'proto.score.StatsResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Host = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.score.Host.repeatedFields_, null);
};
goog.inherits(proto.score.Host, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Host.displayName = 'proto.score.Host';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.HostsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.score.HostsData.repeatedFields_, null);
};
goog.inherits(proto.score.HostsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.HostsData.displayName = 'proto.score.HostsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Location.displayName = 'proto.score.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StorageStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StorageStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StorageStat.displayName = 'proto.score.StorageStat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StorageStat.HostStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StorageStat.HostStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StorageStat.HostStats.displayName = 'proto.score.StorageStat.HostStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StorageStat.Host = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StorageStat.Host, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StorageStat.Host.displayName = 'proto.score.StorageStat.Host';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.StorageStat.Renter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.StorageStat.Renter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.StorageStat.Renter.displayName = 'proto.score.StorageStat.Renter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Node.displayName = 'proto.score.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Node.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.score.Node.Settings.repeatedFields_, null);
};
goog.inherits(proto.score.Node.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Node.Settings.displayName = 'proto.score.Node.Settings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Node.Geo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.Node.Geo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Node.Geo.displayName = 'proto.score.Node.Geo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.score.Node.ExperimentalFlags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.score.Node.ExperimentalFlags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.score.Node.ExperimentalFlags.displayName = 'proto.score.Node.ExperimentalFlags';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.score.NodesReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.NodesReq.prototype.toObject = function(opt_includeInstance) {
  return proto.score.NodesReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.NodesReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.NodesReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeIdList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    requesterId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.NodesReq}
 */
proto.score.NodesReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.NodesReq;
  return proto.score.NodesReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.NodesReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.NodesReq}
 */
proto.score.NodesReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.NodesReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.NodesReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.NodesReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.NodesReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getRequesterId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * repeated string node_id = 1;
 * @return {!Array<string>}
 */
proto.score.NodesReq.prototype.getNodeIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.score.NodesReq} returns this
 */
proto.score.NodesReq.prototype.setNodeIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.score.NodesReq} returns this
 */
proto.score.NodesReq.prototype.addNodeId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.score.NodesReq} returns this
 */
proto.score.NodesReq.prototype.clearNodeIdList = function() {
  return this.setNodeIdList([]);
};


/**
 * optional string requester_id = 2;
 * @return {string}
 */
proto.score.NodesReq.prototype.getRequesterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.NodesReq} returns this
 */
proto.score.NodesReq.prototype.setRequesterId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.score.NodesReq.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.score.NodesReq.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.score.NodesReq.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.score.NodesReq} returns this
 */
proto.score.NodesReq.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.SettingsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.score.SettingsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.SettingsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    respSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.SettingsReq}
 */
proto.score.SettingsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.SettingsReq;
  return proto.score.SettingsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.SettingsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.SettingsReq}
 */
proto.score.SettingsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRespSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.SettingsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.SettingsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.SettingsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRespSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.score.SettingsReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.SettingsReq} returns this
 */
proto.score.SettingsReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 resp_size = 2;
 * @return {number}
 */
proto.score.SettingsReq.prototype.getRespSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsReq} returns this
 */
proto.score.SettingsReq.prototype.setRespSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.SettingsResp.prototype.toObject = function(opt_includeInstance) {
  return proto.score.SettingsResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.SettingsResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseTime: (f = msg.getResponseTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    settingsData: (f = msg.getSettingsData()) && proto.score.SettingsData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.SettingsResp}
 */
proto.score.SettingsResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.SettingsResp;
  return proto.score.SettingsResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.SettingsResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.SettingsResp}
 */
proto.score.SettingsResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.score.ResponseCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResponseTime(value);
      break;
    case 4:
      var value = new proto.score.SettingsData;
      reader.readMessage(value,proto.score.SettingsData.deserializeBinaryFromReader);
      msg.setSettingsData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.SettingsResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.SettingsResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.SettingsResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSettingsData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.score.SettingsData.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseCode code = 1;
 * @return {!proto.score.ResponseCode}
 */
proto.score.SettingsResp.prototype.getCode = function() {
  return /** @type {!proto.score.ResponseCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.score.ResponseCode} value
 * @return {!proto.score.SettingsResp} returns this
 */
proto.score.SettingsResp.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.score.SettingsResp.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.SettingsResp} returns this
 */
proto.score.SettingsResp.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp response_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.SettingsResp.prototype.getResponseTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.SettingsResp} returns this
*/
proto.score.SettingsResp.prototype.setResponseTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.SettingsResp} returns this
 */
proto.score.SettingsResp.prototype.clearResponseTime = function() {
  return this.setResponseTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.SettingsResp.prototype.hasResponseTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SettingsData settings_data = 4;
 * @return {?proto.score.SettingsData}
 */
proto.score.SettingsResp.prototype.getSettingsData = function() {
  return /** @type{?proto.score.SettingsData} */ (
    jspb.Message.getWrapperField(this, proto.score.SettingsData, 4));
};


/**
 * @param {?proto.score.SettingsData|undefined} value
 * @return {!proto.score.SettingsResp} returns this
*/
proto.score.SettingsResp.prototype.setSettingsData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.SettingsResp} returns this
 */
proto.score.SettingsResp.prototype.clearSettingsData = function() {
  return this.setSettingsData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.SettingsResp.prototype.hasSettingsData = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.SettingsData.prototype.toObject = function(opt_includeInstance) {
  return proto.score.SettingsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.SettingsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePriceAsk: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    bandwidthPriceAsk: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    storageTimeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    bandwidthLimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    collateralStake: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.SettingsData}
 */
proto.score.SettingsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.SettingsData;
  return proto.score.SettingsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.SettingsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.SettingsData}
 */
proto.score.SettingsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoragePriceAsk(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBandwidthPriceAsk(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStorageTimeMin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBandwidthLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCollateralStake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.SettingsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.SettingsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.SettingsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.SettingsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePriceAsk();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getBandwidthPriceAsk();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getStorageTimeMin();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getBandwidthLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCollateralStake();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional double storage_price_ask = 1;
 * @return {number}
 */
proto.score.SettingsData.prototype.getStoragePriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsData} returns this
 */
proto.score.SettingsData.prototype.setStoragePriceAsk = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double bandwidth_price_ask = 2;
 * @return {number}
 */
proto.score.SettingsData.prototype.getBandwidthPriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsData} returns this
 */
proto.score.SettingsData.prototype.setBandwidthPriceAsk = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double storage_time_min = 3;
 * @return {number}
 */
proto.score.SettingsData.prototype.getStorageTimeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsData} returns this
 */
proto.score.SettingsData.prototype.setStorageTimeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double bandwidth_limit = 4;
 * @return {number}
 */
proto.score.SettingsData.prototype.getBandwidthLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsData} returns this
 */
proto.score.SettingsData.prototype.setBandwidthLimit = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double collateral_stake = 5;
 * @return {number}
 */
proto.score.SettingsData.prototype.getCollateralStake = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.SettingsData} returns this
 */
proto.score.SettingsData.prototype.setCollateralStake = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.HostsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.score.HostsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.HostsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    respSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.HostsReq}
 */
proto.score.HostsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.HostsReq;
  return proto.score.HostsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.HostsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.HostsReq}
 */
proto.score.HostsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRespSize(value);
      break;
    case 3:
      var value = /** @type {!proto.score.HostsReq.Mode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.HostsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.HostsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.HostsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRespSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.score.HostsReq.Mode = {
  SCORE: 0,
  GEO: 1,
  REP: 2,
  PRICE: 3,
  SPEED: 4,
  TESTNET: 5
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.score.HostsReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.HostsReq} returns this
 */
proto.score.HostsReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 resp_size = 2;
 * @return {number}
 */
proto.score.HostsReq.prototype.getRespSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.HostsReq} returns this
 */
proto.score.HostsReq.prototype.setRespSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Mode mode = 3;
 * @return {!proto.score.HostsReq.Mode}
 */
proto.score.HostsReq.prototype.getMode = function() {
  return /** @type {!proto.score.HostsReq.Mode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.score.HostsReq.Mode} value
 * @return {!proto.score.HostsReq} returns this
 */
proto.score.HostsReq.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.score.HostsReq.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.HostsReq} returns this
 */
proto.score.HostsReq.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.RolesHostsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.score.RolesHostsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.RolesHostsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.RolesHostsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    respSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.RolesHostsReq}
 */
proto.score.RolesHostsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.RolesHostsReq;
  return proto.score.RolesHostsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.RolesHostsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.RolesHostsReq}
 */
proto.score.RolesHostsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRespSize(value);
      break;
    case 3:
      var value = /** @type {!proto.score.NodeRole} */ (reader.readEnum());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.RolesHostsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.RolesHostsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.RolesHostsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.RolesHostsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRespSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.score.RolesHostsReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.RolesHostsReq} returns this
 */
proto.score.RolesHostsReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 resp_size = 2;
 * @return {number}
 */
proto.score.RolesHostsReq.prototype.getRespSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.RolesHostsReq} returns this
 */
proto.score.RolesHostsReq.prototype.setRespSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional NodeRole role = 3;
 * @return {!proto.score.NodeRole}
 */
proto.score.RolesHostsReq.prototype.getRole = function() {
  return /** @type {!proto.score.NodeRole} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.score.NodeRole} value
 * @return {!proto.score.RolesHostsReq} returns this
 */
proto.score.RolesHostsReq.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.HostsResp.prototype.toObject = function(opt_includeInstance) {
  return proto.score.HostsResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.HostsResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hosts: (f = msg.getHosts()) && proto.score.HostsData.toObject(includeInstance, f),
    respSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    responseTime: (f = msg.getResponseTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.HostsResp}
 */
proto.score.HostsResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.HostsResp;
  return proto.score.HostsResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.HostsResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.HostsResp}
 */
proto.score.HostsResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.score.ResponseCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.score.HostsData;
      reader.readMessage(value,proto.score.HostsData.deserializeBinaryFromReader);
      msg.setHosts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRespSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResponseTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.HostsResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.HostsResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.HostsResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHosts();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.score.HostsData.serializeBinaryToWriter
    );
  }
  f = message.getRespSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getResponseTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseCode code = 1;
 * @return {!proto.score.ResponseCode}
 */
proto.score.HostsResp.prototype.getCode = function() {
  return /** @type {!proto.score.ResponseCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.score.ResponseCode} value
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.score.HostsResp.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional HostsData hosts = 3;
 * @return {?proto.score.HostsData}
 */
proto.score.HostsResp.prototype.getHosts = function() {
  return /** @type{?proto.score.HostsData} */ (
    jspb.Message.getWrapperField(this, proto.score.HostsData, 3));
};


/**
 * @param {?proto.score.HostsData|undefined} value
 * @return {!proto.score.HostsResp} returns this
*/
proto.score.HostsResp.prototype.setHosts = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.clearHosts = function() {
  return this.setHosts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.HostsResp.prototype.hasHosts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 resp_size = 4;
 * @return {number}
 */
proto.score.HostsResp.prototype.getRespSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.setRespSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string mode = 5;
 * @return {string}
 */
proto.score.HostsResp.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp response_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.HostsResp.prototype.getResponseTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.HostsResp} returns this
*/
proto.score.HostsResp.prototype.setResponseTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.HostsResp} returns this
 */
proto.score.HostsResp.prototype.clearResponseTime = function() {
  return this.setResponseTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.HostsResp.prototype.hasResponseTime = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StatsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StatsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StatsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StatsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StatsReq}
 */
proto.score.StatsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StatsReq;
  return proto.score.StatsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StatsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StatsReq}
 */
proto.score.StatsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StatsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StatsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StatsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StatsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.score.StatsReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.StatsReq} returns this
 */
proto.score.StatsReq.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StatsResp.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StatsResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StatsResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StatsResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseTime: (f = msg.getResponseTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stats: (f = msg.getStats()) && proto.score.StorageStat.HostStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StatsResp}
 */
proto.score.StatsResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StatsResp;
  return proto.score.StatsResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StatsResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StatsResp}
 */
proto.score.StatsResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.score.ResponseCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResponseTime(value);
      break;
    case 4:
      var value = new proto.score.StorageStat.HostStats;
      reader.readMessage(value,proto.score.StorageStat.HostStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StatsResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StatsResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StatsResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StatsResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.score.StorageStat.HostStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseCode code = 1;
 * @return {!proto.score.ResponseCode}
 */
proto.score.StatsResp.prototype.getCode = function() {
  return /** @type {!proto.score.ResponseCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.score.ResponseCode} value
 * @return {!proto.score.StatsResp} returns this
 */
proto.score.StatsResp.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.score.StatsResp.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.StatsResp} returns this
 */
proto.score.StatsResp.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp response_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.StatsResp.prototype.getResponseTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.StatsResp} returns this
*/
proto.score.StatsResp.prototype.setResponseTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StatsResp} returns this
 */
proto.score.StatsResp.prototype.clearResponseTime = function() {
  return this.setResponseTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StatsResp.prototype.hasResponseTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StorageStat.HostStats stats = 4;
 * @return {?proto.score.StorageStat.HostStats}
 */
proto.score.StatsResp.prototype.getStats = function() {
  return /** @type{?proto.score.StorageStat.HostStats} */ (
    jspb.Message.getWrapperField(this, proto.score.StorageStat.HostStats, 4));
};


/**
 * @param {?proto.score.StorageStat.HostStats|undefined} value
 * @return {!proto.score.StatsResp} returns this
*/
proto.score.StatsResp.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StatsResp} returns this
 */
proto.score.StatsResp.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StatsResp.prototype.hasStats = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.score.Host.repeatedFields_ = [35];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Host.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Host.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Host} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Host.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createTimestamp: (f = msg.getCreateTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updateTimestamp: (f = msg.getUpdateTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    btfsVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    heartBeats: jspb.Message.getFieldWithDefault(msg, 7, 0),
    uptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    age: jspb.Message.getFieldWithDefault(msg, 9, 0),
    reputation: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    uploadAverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    uploadVariance: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    downloadAverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    downloadVariance: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    location: (f = msg.getLocation()) && proto.score.Location.toObject(includeInstance, f),
    storageVolumeCap: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    storageVolumeLeft: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    storageTimeMin: jspb.Message.getFieldWithDefault(msg, 18, 0),
    storagePriceAsk: jspb.Message.getFieldWithDefault(msg, 19, 0),
    storagePriceEst: jspb.Message.getFieldWithDefault(msg, 20, 0),
    bandwidthLimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    bandwidthPriceAsk: jspb.Message.getFieldWithDefault(msg, 22, 0),
    bandwidthPriceEst: jspb.Message.getFieldWithDefault(msg, 23, 0),
    collateralStake: jspb.Message.getFieldWithDefault(msg, 24, 0),
    collateralLost: jspb.Message.getFieldWithDefault(msg, 25, 0),
    collateralBurn: jspb.Message.getFieldWithDefault(msg, 26, 0),
    countryShort: jspb.Message.getFieldWithDefault(msg, 27, ""),
    flg: (f = msg.getFlg()) && proto.score.Node.ExperimentalFlags.toObject(includeInstance, f),
    discovery: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    uptimeScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 30, 0.0),
    ageScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 31, 0.0),
    versionScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 32, 0.0),
    uploadSpeedScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 33, 0.0),
    downloadSpeedScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 34, 0.0),
    rolesList: (f = jspb.Message.getRepeatedField(msg, 35)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Host}
 */
proto.score.Host.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Host;
  return proto.score.Host.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Host} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Host}
 */
proto.score.Host.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTimestamp(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdateTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBtfsVersion(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeartBeats(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUptime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setReputation(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUploadAverage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUploadVariance(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadAverage(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadVariance(value);
      break;
    case 15:
      var value = new proto.score.Location;
      reader.readMessage(value,proto.score.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStorageVolumeCap(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStorageVolumeLeft(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStorageTimeMin(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStoragePriceAsk(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStoragePriceEst(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBandwidthLimit(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBandwidthPriceAsk(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBandwidthPriceEst(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCollateralStake(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCollateralLost(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCollateralBurn(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryShort(value);
      break;
    case 28:
      var value = new proto.score.Node.ExperimentalFlags;
      reader.readMessage(value,proto.score.Node.ExperimentalFlags.deserializeBinaryFromReader);
      msg.setFlg(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDiscovery(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUptimeScore(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAgeScore(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVersionScore(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUploadSpeedScore(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadSpeedScore(value);
      break;
    case 35:
      var value = /** @type {!Array<!proto.score.NodeRole>} */ (reader.readPackedEnum());
      msg.setRolesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Host.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Host.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Host} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Host.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBtfsVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getHeartBeats();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getUptime();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getAge();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getReputation();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getUploadAverage();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getUploadVariance();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getDownloadAverage();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getDownloadVariance();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.score.Location.serializeBinaryToWriter
    );
  }
  f = message.getStorageVolumeCap();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getStorageVolumeLeft();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getStorageTimeMin();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getStoragePriceAsk();
  if (f !== 0) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = message.getStoragePriceEst();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = message.getBandwidthLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getBandwidthPriceAsk();
  if (f !== 0) {
    writer.writeUint64(
      22,
      f
    );
  }
  f = message.getBandwidthPriceEst();
  if (f !== 0) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = message.getCollateralStake();
  if (f !== 0) {
    writer.writeUint64(
      24,
      f
    );
  }
  f = message.getCollateralLost();
  if (f !== 0) {
    writer.writeUint64(
      25,
      f
    );
  }
  f = message.getCollateralBurn();
  if (f !== 0) {
    writer.writeUint64(
      26,
      f
    );
  }
  f = message.getCountryShort();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getFlg();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.score.Node.ExperimentalFlags.serializeBinaryToWriter
    );
  }
  f = message.getDiscovery();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getUptimeScore();
  if (f !== 0.0) {
    writer.writeFloat(
      30,
      f
    );
  }
  f = message.getAgeScore();
  if (f !== 0.0) {
    writer.writeFloat(
      31,
      f
    );
  }
  f = message.getVersionScore();
  if (f !== 0.0) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = message.getUploadSpeedScore();
  if (f !== 0.0) {
    writer.writeFloat(
      33,
      f
    );
  }
  f = message.getDownloadSpeedScore();
  if (f !== 0.0) {
    writer.writeFloat(
      34,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      35,
      f
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.score.Host.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp create_timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.Host.prototype.getCreateTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.Host} returns this
*/
proto.score.Host.prototype.setCreateTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.clearCreateTimestamp = function() {
  return this.setCreateTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Host.prototype.hasCreateTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp update_timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.Host.prototype.getUpdateTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.Host} returns this
*/
proto.score.Host.prototype.setUpdateTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.clearUpdateTimestamp = function() {
  return this.setUpdateTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Host.prototype.hasUpdateTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.score.Host.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string btfs_version = 5;
 * @return {string}
 */
proto.score.Host.prototype.getBtfsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setBtfsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float score = 6;
 * @return {number}
 */
proto.score.Host.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional uint64 heart_beats = 7;
 * @return {number}
 */
proto.score.Host.prototype.getHeartBeats = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setHeartBeats = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional float uptime = 8;
 * @return {number}
 */
proto.score.Host.prototype.getUptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setUptime = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint64 age = 9;
 * @return {number}
 */
proto.score.Host.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setAge = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional float reputation = 10;
 * @return {number}
 */
proto.score.Host.prototype.getReputation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setReputation = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float upload_average = 11;
 * @return {number}
 */
proto.score.Host.prototype.getUploadAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setUploadAverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float upload_variance = 12;
 * @return {number}
 */
proto.score.Host.prototype.getUploadVariance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setUploadVariance = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float download_average = 13;
 * @return {number}
 */
proto.score.Host.prototype.getDownloadAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setDownloadAverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float download_variance = 14;
 * @return {number}
 */
proto.score.Host.prototype.getDownloadVariance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setDownloadVariance = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional Location location = 15;
 * @return {?proto.score.Location}
 */
proto.score.Host.prototype.getLocation = function() {
  return /** @type{?proto.score.Location} */ (
    jspb.Message.getWrapperField(this, proto.score.Location, 15));
};


/**
 * @param {?proto.score.Location|undefined} value
 * @return {!proto.score.Host} returns this
*/
proto.score.Host.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Host.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional float storage_volume_cap = 16;
 * @return {number}
 */
proto.score.Host.prototype.getStorageVolumeCap = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setStorageVolumeCap = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float storage_volume_left = 17;
 * @return {number}
 */
proto.score.Host.prototype.getStorageVolumeLeft = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setStorageVolumeLeft = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional uint64 storage_time_min = 18;
 * @return {number}
 */
proto.score.Host.prototype.getStorageTimeMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setStorageTimeMin = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional uint64 storage_price_ask = 19;
 * @return {number}
 */
proto.score.Host.prototype.getStoragePriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setStoragePriceAsk = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional uint64 storage_price_est = 20;
 * @return {number}
 */
proto.score.Host.prototype.getStoragePriceEst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setStoragePriceEst = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional double bandwidth_limit = 21;
 * @return {number}
 */
proto.score.Host.prototype.getBandwidthLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setBandwidthLimit = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional uint64 bandwidth_price_ask = 22;
 * @return {number}
 */
proto.score.Host.prototype.getBandwidthPriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setBandwidthPriceAsk = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional uint64 bandwidth_price_est = 23;
 * @return {number}
 */
proto.score.Host.prototype.getBandwidthPriceEst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setBandwidthPriceEst = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional uint64 collateral_stake = 24;
 * @return {number}
 */
proto.score.Host.prototype.getCollateralStake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setCollateralStake = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional uint64 collateral_lost = 25;
 * @return {number}
 */
proto.score.Host.prototype.getCollateralLost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setCollateralLost = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional uint64 collateral_burn = 26;
 * @return {number}
 */
proto.score.Host.prototype.getCollateralBurn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setCollateralBurn = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string country_short = 27;
 * @return {string}
 */
proto.score.Host.prototype.getCountryShort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setCountryShort = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional Node.ExperimentalFlags flg = 28;
 * @return {?proto.score.Node.ExperimentalFlags}
 */
proto.score.Host.prototype.getFlg = function() {
  return /** @type{?proto.score.Node.ExperimentalFlags} */ (
    jspb.Message.getWrapperField(this, proto.score.Node.ExperimentalFlags, 28));
};


/**
 * @param {?proto.score.Node.ExperimentalFlags|undefined} value
 * @return {!proto.score.Host} returns this
*/
proto.score.Host.prototype.setFlg = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.clearFlg = function() {
  return this.setFlg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Host.prototype.hasFlg = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional float discovery = 29;
 * @return {number}
 */
proto.score.Host.prototype.getDiscovery = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setDiscovery = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional float uptime_score = 30;
 * @return {number}
 */
proto.score.Host.prototype.getUptimeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 30, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setUptimeScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 30, value);
};


/**
 * optional float age_score = 31;
 * @return {number}
 */
proto.score.Host.prototype.getAgeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 31, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setAgeScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 31, value);
};


/**
 * optional float version_score = 32;
 * @return {number}
 */
proto.score.Host.prototype.getVersionScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 32, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setVersionScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 32, value);
};


/**
 * optional float upload_speed_score = 33;
 * @return {number}
 */
proto.score.Host.prototype.getUploadSpeedScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 33, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setUploadSpeedScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 33, value);
};


/**
 * optional float download_speed_score = 34;
 * @return {number}
 */
proto.score.Host.prototype.getDownloadSpeedScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 34, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setDownloadSpeedScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 34, value);
};


/**
 * repeated NodeRole roles = 35;
 * @return {!Array<!proto.score.NodeRole>}
 */
proto.score.Host.prototype.getRolesList = function() {
  return /** @type {!Array<!proto.score.NodeRole>} */ (jspb.Message.getRepeatedField(this, 35));
};


/**
 * @param {!Array<!proto.score.NodeRole>} value
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 35, value || []);
};


/**
 * @param {!proto.score.NodeRole} value
 * @param {number=} opt_index
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 35, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.score.Host} returns this
 */
proto.score.Host.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.score.HostsData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.HostsData.prototype.toObject = function(opt_includeInstance) {
  return proto.score.HostsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.HostsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostsList: jspb.Message.toObjectList(msg.getHostsList(),
    proto.score.Host.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.HostsData}
 */
proto.score.HostsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.HostsData;
  return proto.score.HostsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.HostsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.HostsData}
 */
proto.score.HostsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.score.Host;
      reader.readMessage(value,proto.score.Host.deserializeBinaryFromReader);
      msg.addHosts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.HostsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.HostsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.HostsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.HostsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.score.Host.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Host hosts = 1;
 * @return {!Array<!proto.score.Host>}
 */
proto.score.HostsData.prototype.getHostsList = function() {
  return /** @type{!Array<!proto.score.Host>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.score.Host, 1));
};


/**
 * @param {!Array<!proto.score.Host>} value
 * @return {!proto.score.HostsData} returns this
*/
proto.score.HostsData.prototype.setHostsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.score.Host=} opt_value
 * @param {number=} opt_index
 * @return {!proto.score.Host}
 */
proto.score.HostsData.prototype.addHosts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.score.Host, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.score.HostsData} returns this
 */
proto.score.HostsData.prototype.clearHostsList = function() {
  return this.setHostsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Location}
 */
proto.score.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Location;
  return proto.score.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Location}
 */
proto.score.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double lat = 1;
 * @return {number}
 */
proto.score.Location.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Location} returns this
 */
proto.score.Location.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double lon = 2;
 * @return {number}
 */
proto.score.Location.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Location} returns this
 */
proto.score.Location.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StorageStat.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StorageStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StorageStat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostStats: (f = msg.getHostStats()) && proto.score.StorageStat.Host.toObject(includeInstance, f),
    renterStats: (f = msg.getRenterStats()) && proto.score.StorageStat.Renter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StorageStat}
 */
proto.score.StorageStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StorageStat;
  return proto.score.StorageStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StorageStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StorageStat}
 */
proto.score.StorageStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.score.StorageStat.Host;
      reader.readMessage(value,proto.score.StorageStat.Host.deserializeBinaryFromReader);
      msg.setHostStats(value);
      break;
    case 2:
      var value = new proto.score.StorageStat.Renter;
      reader.readMessage(value,proto.score.StorageStat.Renter.deserializeBinaryFromReader);
      msg.setRenterStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StorageStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StorageStat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StorageStat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostStats();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.score.StorageStat.Host.serializeBinaryToWriter
    );
  }
  f = message.getRenterStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.score.StorageStat.Renter.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StorageStat.HostStats.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StorageStat.HostStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StorageStat.HostStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.HostStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    uptime: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    uptimeScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    ageScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    versionScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    speedScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    uploadSpeedScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    downloadSpeedScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    uptimeWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    ageWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    versionWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    speedWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    uploadSpeedWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    downloadSpeedWeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    lastUpdated: (f = msg.getLastUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StorageStat.HostStats}
 */
proto.score.StorageStat.HostStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StorageStat.HostStats;
  return proto.score.StorageStat.HostStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StorageStat.HostStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StorageStat.HostStats}
 */
proto.score.StorageStat.HostStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUptime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUptimeScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAgeScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVersionScore(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedScore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUploadSpeedScore(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadSpeedScore(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUptimeWeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAgeWeight(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setVersionWeight(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpeedWeight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUploadSpeedWeight(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDownloadSpeedWeight(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StorageStat.HostStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StorageStat.HostStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StorageStat.HostStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.HostStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUptime();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getUptimeScore();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAgeScore();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getVersionScore();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getSpeedScore();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getUploadSpeedScore();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getDownloadSpeedScore();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getUptimeWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getAgeWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getVersionWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getSpeedWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getUploadSpeedWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getDownloadSpeedWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getLastUpdated();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional float uptime = 1;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getUptime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setUptime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float score = 2;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float uptime_score = 3;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getUptimeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setUptimeScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float age_score = 4;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getAgeScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setAgeScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float version_score = 5;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getVersionScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setVersionScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float speed_score = 6;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getSpeedScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setSpeedScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float upload_speed_score = 7;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getUploadSpeedScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setUploadSpeedScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float download_speed_score = 8;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getDownloadSpeedScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setDownloadSpeedScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float uptime_weight = 9;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getUptimeWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setUptimeWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float age_weight = 10;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getAgeWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setAgeWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float version_weight = 11;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getVersionWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setVersionWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float speed_weight = 12;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getSpeedWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setSpeedWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float upload_speed_weight = 13;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getUploadSpeedWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setUploadSpeedWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float download_speed_weight = 14;
 * @return {number}
 */
proto.score.StorageStat.HostStats.prototype.getDownloadSpeedWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.setDownloadSpeedWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp last_updated = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.StorageStat.HostStats.prototype.getLastUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.StorageStat.HostStats} returns this
*/
proto.score.StorageStat.HostStats.prototype.setLastUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StorageStat.HostStats} returns this
 */
proto.score.StorageStat.HostStats.prototype.clearLastUpdated = function() {
  return this.setLastUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StorageStat.HostStats.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StorageStat.Host.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StorageStat.Host.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StorageStat.Host} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.Host.toObject = function(includeInstance, msg) {
  var f, obj = {
    online: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    storageUsed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    storageCap: jspb.Message.getFieldWithDefault(msg, 3, 0),
    storageDiskTotal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    storageDiskAvailable: jspb.Message.getFieldWithDefault(msg, 5, 0),
    stats: (f = msg.getStats()) && proto.score.StorageStat.HostStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StorageStat.Host}
 */
proto.score.StorageStat.Host.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StorageStat.Host;
  return proto.score.StorageStat.Host.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StorageStat.Host} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StorageStat.Host}
 */
proto.score.StorageStat.Host.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorageUsed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorageCap(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorageDiskTotal(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorageDiskAvailable(value);
      break;
    case 6:
      var value = new proto.score.StorageStat.HostStats;
      reader.readMessage(value,proto.score.StorageStat.HostStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StorageStat.Host.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StorageStat.Host.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StorageStat.Host} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.Host.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStorageUsed();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStorageCap();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStorageDiskTotal();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStorageDiskAvailable();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.score.StorageStat.HostStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool online = 1;
 * @return {boolean}
 */
proto.score.StorageStat.Host.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 storage_used = 2;
 * @return {number}
 */
proto.score.StorageStat.Host.prototype.getStorageUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.setStorageUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 storage_cap = 3;
 * @return {number}
 */
proto.score.StorageStat.Host.prototype.getStorageCap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.setStorageCap = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 storage_disk_total = 4;
 * @return {number}
 */
proto.score.StorageStat.Host.prototype.getStorageDiskTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.setStorageDiskTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 storage_disk_available = 5;
 * @return {number}
 */
proto.score.StorageStat.Host.prototype.getStorageDiskAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.setStorageDiskAvailable = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional HostStats stats = 6;
 * @return {?proto.score.StorageStat.HostStats}
 */
proto.score.StorageStat.Host.prototype.getStats = function() {
  return /** @type{?proto.score.StorageStat.HostStats} */ (
    jspb.Message.getWrapperField(this, proto.score.StorageStat.HostStats, 6));
};


/**
 * @param {?proto.score.StorageStat.HostStats|undefined} value
 * @return {!proto.score.StorageStat.Host} returns this
*/
proto.score.StorageStat.Host.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StorageStat.Host} returns this
 */
proto.score.StorageStat.Host.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StorageStat.Host.prototype.hasStats = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.StorageStat.Renter.prototype.toObject = function(opt_includeInstance) {
  return proto.score.StorageStat.Renter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.StorageStat.Renter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.Renter.toObject = function(includeInstance, msg) {
  var f, obj = {
    reserved: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.StorageStat.Renter}
 */
proto.score.StorageStat.Renter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.StorageStat.Renter;
  return proto.score.StorageStat.Renter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.StorageStat.Renter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.StorageStat.Renter}
 */
proto.score.StorageStat.Renter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.StorageStat.Renter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.StorageStat.Renter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.StorageStat.Renter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.StorageStat.Renter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReserved();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string reserved = 1;
 * @return {string}
 */
proto.score.StorageStat.Renter.prototype.getReserved = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.StorageStat.Renter} returns this
 */
proto.score.StorageStat.Renter.prototype.setReserved = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Host host_stats = 1;
 * @return {?proto.score.StorageStat.Host}
 */
proto.score.StorageStat.prototype.getHostStats = function() {
  return /** @type{?proto.score.StorageStat.Host} */ (
    jspb.Message.getWrapperField(this, proto.score.StorageStat.Host, 1));
};


/**
 * @param {?proto.score.StorageStat.Host|undefined} value
 * @return {!proto.score.StorageStat} returns this
*/
proto.score.StorageStat.prototype.setHostStats = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StorageStat} returns this
 */
proto.score.StorageStat.prototype.clearHostStats = function() {
  return this.setHostStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StorageStat.prototype.hasHostStats = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Renter renter_stats = 2;
 * @return {?proto.score.StorageStat.Renter}
 */
proto.score.StorageStat.prototype.getRenterStats = function() {
  return /** @type{?proto.score.StorageStat.Renter} */ (
    jspb.Message.getWrapperField(this, proto.score.StorageStat.Renter, 2));
};


/**
 * @param {?proto.score.StorageStat.Renter|undefined} value
 * @return {!proto.score.StorageStat} returns this
*/
proto.score.StorageStat.prototype.setRenterStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.StorageStat} returns this
 */
proto.score.StorageStat.prototype.clearRenterStats = function() {
  return this.setRenterStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.StorageStat.prototype.hasRenterStats = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    btfsVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    upTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    storageUsed: jspb.Message.getFieldWithDefault(msg, 5, 0),
    storageVolumeCap: jspb.Message.getFieldWithDefault(msg, 6, 0),
    memoryUsed: jspb.Message.getFieldWithDefault(msg, 7, 0),
    cpuUsed: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    upload: jspb.Message.getFieldWithDefault(msg, 9, 0),
    download: jspb.Message.getFieldWithDefault(msg, 10, 0),
    totalUpload: jspb.Message.getFieldWithDefault(msg, 11, 0),
    totalDownload: jspb.Message.getFieldWithDefault(msg, 12, 0),
    storagePriceDeal: jspb.Message.getFieldWithDefault(msg, 13, 0),
    bandwidthPriceDeal: jspb.Message.getFieldWithDefault(msg, 14, 0),
    settings: (f = msg.getSettings()) && proto.score.Node.Settings.toObject(includeInstance, f),
    reputation: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    blocksUp: jspb.Message.getFieldWithDefault(msg, 17, 0),
    blocksDown: jspb.Message.getFieldWithDefault(msg, 18, 0),
    osType: jspb.Message.getFieldWithDefault(msg, 19, ""),
    archType: jspb.Message.getFieldWithDefault(msg, 20, ""),
    cpuInfo: jspb.Message.getFieldWithDefault(msg, 21, ""),
    peersConnected: jspb.Message.getFieldWithDefault(msg, 23, 0),
    timeCreated: (f = msg.getTimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    hVal: jspb.Message.getFieldWithDefault(msg, 25, ""),
    geo: (f = msg.getGeo()) && proto.score.Node.Geo.toObject(includeInstance, f),
    flg: (f = msg.getFlg()) && proto.score.Node.ExperimentalFlags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Node}
 */
proto.score.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Node;
  return proto.score.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Node}
 */
proto.score.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBtfsVersion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStorageUsed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStorageVolumeCap(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMemoryUsed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCpuUsed(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpload(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDownload(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalUpload(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalDownload(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStoragePriceDeal(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBandwidthPriceDeal(value);
      break;
    case 15:
      var value = new proto.score.Node.Settings;
      reader.readMessage(value,proto.score.Node.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReputation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlocksUp(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlocksDown(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsType(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setArchType(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCpuInfo(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPeersConnected(value);
      break;
    case 24:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeCreated(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setHVal(value);
      break;
    case 26:
      var value = new proto.score.Node.Geo;
      reader.readMessage(value,proto.score.Node.Geo.deserializeBinaryFromReader);
      msg.setGeo(value);
      break;
    case 27:
      var value = new proto.score.Node.ExperimentalFlags;
      reader.readMessage(value,proto.score.Node.ExperimentalFlags.deserializeBinaryFromReader);
      msg.setFlg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBtfsVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpTime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getStorageUsed();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getStorageVolumeCap();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getMemoryUsed();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getCpuUsed();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getUpload();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getDownload();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getTotalUpload();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getTotalDownload();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getStoragePriceDeal();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getBandwidthPriceDeal();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.score.Node.Settings.serializeBinaryToWriter
    );
  }
  f = message.getReputation();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getBlocksUp();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getBlocksDown();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getOsType();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getArchType();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCpuInfo();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getPeersConnected();
  if (f !== 0) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = message.getTimeCreated();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getHVal();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getGeo();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.score.Node.Geo.serializeBinaryToWriter
    );
  }
  f = message.getFlg();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.score.Node.ExperimentalFlags.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.score.Node.Settings.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Node.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Node.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Node.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagePriceAsk: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bandwidthPriceAsk: jspb.Message.getFieldWithDefault(msg, 2, 0),
    storageTimeMin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bandwidthLimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    collateralStake: jspb.Message.getFieldWithDefault(msg, 5, 0),
    storagePriceDefault: jspb.Message.getFieldWithDefault(msg, 6, 0),
    customizedPricing: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    rolesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    repairPriceDefault: jspb.Message.getFieldWithDefault(msg, 9, 0),
    repairPriceCustomized: jspb.Message.getFieldWithDefault(msg, 10, 0),
    repairCustomizedPricing: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    challengePriceDefault: jspb.Message.getFieldWithDefault(msg, 12, 0),
    challengePriceCustomized: jspb.Message.getFieldWithDefault(msg, 13, 0),
    challengeCustomizedPricing: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Node.Settings}
 */
proto.score.Node.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Node.Settings;
  return proto.score.Node.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Node.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Node.Settings}
 */
proto.score.Node.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStoragePriceAsk(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBandwidthPriceAsk(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStorageTimeMin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBandwidthLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCollateralStake(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStoragePriceDefault(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomizedPricing(value);
      break;
    case 8:
      var value = /** @type {!Array<!proto.score.NodeRole>} */ (reader.readPackedEnum());
      msg.setRolesList(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRepairPriceDefault(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRepairPriceCustomized(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRepairCustomizedPricing(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChallengePriceDefault(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChallengePriceCustomized(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChallengeCustomizedPricing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Node.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Node.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Node.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragePriceAsk();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBandwidthPriceAsk();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStorageTimeMin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getBandwidthLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCollateralStake();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getStoragePriceDefault();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getCustomizedPricing();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      8,
      f
    );
  }
  f = message.getRepairPriceDefault();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getRepairPriceCustomized();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getRepairCustomizedPricing();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getChallengePriceDefault();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getChallengePriceCustomized();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getChallengeCustomizedPricing();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional uint64 storage_price_ask = 1;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getStoragePriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setStoragePriceAsk = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 bandwidth_price_ask = 2;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getBandwidthPriceAsk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setBandwidthPriceAsk = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 storage_time_min = 3;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getStorageTimeMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setStorageTimeMin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double bandwidth_limit = 4;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getBandwidthLimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setBandwidthLimit = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint64 collateral_stake = 5;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getCollateralStake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setCollateralStake = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 storage_price_default = 6;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getStoragePriceDefault = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setStoragePriceDefault = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool customized_pricing = 7;
 * @return {boolean}
 */
proto.score.Node.Settings.prototype.getCustomizedPricing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setCustomizedPricing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated NodeRole roles = 8;
 * @return {!Array<!proto.score.NodeRole>}
 */
proto.score.Node.Settings.prototype.getRolesList = function() {
  return /** @type {!Array<!proto.score.NodeRole>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<!proto.score.NodeRole>} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!proto.score.NodeRole} value
 * @param {number=} opt_index
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * optional uint64 repair_price_default = 9;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getRepairPriceDefault = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setRepairPriceDefault = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 repair_price_customized = 10;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getRepairPriceCustomized = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setRepairPriceCustomized = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool repair_customized_pricing = 11;
 * @return {boolean}
 */
proto.score.Node.Settings.prototype.getRepairCustomizedPricing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setRepairCustomizedPricing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional uint64 challenge_price_default = 12;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getChallengePriceDefault = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setChallengePriceDefault = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 challenge_price_customized = 13;
 * @return {number}
 */
proto.score.Node.Settings.prototype.getChallengePriceCustomized = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setChallengePriceCustomized = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool challenge_customized_pricing = 14;
 * @return {boolean}
 */
proto.score.Node.Settings.prototype.getChallengeCustomizedPricing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.Settings} returns this
 */
proto.score.Node.Settings.prototype.setChallengeCustomizedPricing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Node.Geo.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Node.Geo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Node.Geo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.Geo.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryShort: jspb.Message.getFieldWithDefault(msg, 1, ""),
    region: jspb.Message.getFieldWithDefault(msg, 2, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Node.Geo}
 */
proto.score.Node.Geo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Node.Geo;
  return proto.score.Node.Geo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Node.Geo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Node.Geo}
 */
proto.score.Node.Geo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryShort(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Node.Geo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Node.Geo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Node.Geo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.Geo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryShort();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
};


/**
 * optional string country_short = 1;
 * @return {string}
 */
proto.score.Node.Geo.prototype.getCountryShort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node.Geo} returns this
 */
proto.score.Node.Geo.prototype.setCountryShort = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region = 2;
 * @return {string}
 */
proto.score.Node.Geo.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node.Geo} returns this
 */
proto.score.Node.Geo.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float latitude = 3;
 * @return {number}
 */
proto.score.Node.Geo.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Geo} returns this
 */
proto.score.Node.Geo.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float longitude = 4;
 * @return {number}
 */
proto.score.Node.Geo.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node.Geo} returns this
 */
proto.score.Node.Geo.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.score.Node.ExperimentalFlags.prototype.toObject = function(opt_includeInstance) {
  return proto.score.Node.ExperimentalFlags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.score.Node.ExperimentalFlags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.ExperimentalFlags.toObject = function(includeInstance, msg) {
  var f, obj = {
    analytics: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    filestoreEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    hostsSyncEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    hostsSyncMode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    libp2pStreamMounting: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    p2pHttpProxy: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    preferTls: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    quic: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    removeOnUnpin: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    shardingEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    storageClientEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    storageHostEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    strategicProviding: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    urlStoreEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    disableAutoUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    graphsyncEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    repairHostEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    challengeHostEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.score.Node.ExperimentalFlags}
 */
proto.score.Node.ExperimentalFlags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.score.Node.ExperimentalFlags;
  return proto.score.Node.ExperimentalFlags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.score.Node.ExperimentalFlags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.score.Node.ExperimentalFlags}
 */
proto.score.Node.ExperimentalFlags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnalytics(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFilestoreEnabled(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHostsSyncEnabled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostsSyncMode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLibp2pStreamMounting(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setP2pHttpProxy(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreferTls(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuic(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemoveOnUnpin(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShardingEnabled(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStorageClientEnabled(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStorageHostEnabled(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStrategicProviding(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUrlStoreEnabled(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableAutoUpdate(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGraphsyncEnabled(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRepairHostEnabled(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChallengeHostEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.score.Node.ExperimentalFlags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.score.Node.ExperimentalFlags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.score.Node.ExperimentalFlags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.score.Node.ExperimentalFlags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnalytics();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFilestoreEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getHostsSyncEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getHostsSyncMode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLibp2pStreamMounting();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getP2pHttpProxy();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getPreferTls();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getQuic();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getRemoveOnUnpin();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getShardingEnabled();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getStorageClientEnabled();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getStorageHostEnabled();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getStrategicProviding();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getUrlStoreEnabled();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getDisableAutoUpdate();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getGraphsyncEnabled();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getRepairHostEnabled();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getChallengeHostEnabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional bool analytics = 1;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getAnalytics = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setAnalytics = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool filestore_enabled = 2;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getFilestoreEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setFilestoreEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool hosts_sync_enabled = 3;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getHostsSyncEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setHostsSyncEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string hosts_sync_mode = 4;
 * @return {string}
 */
proto.score.Node.ExperimentalFlags.prototype.getHostsSyncMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setHostsSyncMode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool libp2p_stream_mounting = 5;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getLibp2pStreamMounting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setLibp2pStreamMounting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool p2p_http_proxy = 6;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getP2pHttpProxy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setP2pHttpProxy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool prefer_tls = 7;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getPreferTls = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setPreferTls = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool quic = 8;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getQuic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setQuic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool remove_on_unpin = 9;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getRemoveOnUnpin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setRemoveOnUnpin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool sharding_enabled = 10;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getShardingEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setShardingEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool storage_client_enabled = 11;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getStorageClientEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setStorageClientEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool storage_host_enabled = 12;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getStorageHostEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setStorageHostEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool strategic_providing = 13;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getStrategicProviding = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setStrategicProviding = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool url_store_enabled = 14;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getUrlStoreEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setUrlStoreEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool disable_auto_update = 15;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getDisableAutoUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setDisableAutoUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool graphsync_enabled = 16;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getGraphsyncEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setGraphsyncEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool repair_host_enabled = 17;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getRepairHostEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setRepairHostEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool challenge_host_enabled = 18;
 * @return {boolean}
 */
proto.score.Node.ExperimentalFlags.prototype.getChallengeHostEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.score.Node.ExperimentalFlags} returns this
 */
proto.score.Node.ExperimentalFlags.prototype.setChallengeHostEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.score.Node.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string node_id = 2;
 * @return {string}
 */
proto.score.Node.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string btfs_version = 3;
 * @return {string}
 */
proto.score.Node.prototype.getBtfsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setBtfsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 up_time = 4;
 * @return {number}
 */
proto.score.Node.prototype.getUpTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setUpTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 storage_used = 5;
 * @return {number}
 */
proto.score.Node.prototype.getStorageUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setStorageUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 storage_volume_cap = 6;
 * @return {number}
 */
proto.score.Node.prototype.getStorageVolumeCap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setStorageVolumeCap = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 memory_used = 7;
 * @return {number}
 */
proto.score.Node.prototype.getMemoryUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setMemoryUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double cpu_used = 8;
 * @return {number}
 */
proto.score.Node.prototype.getCpuUsed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setCpuUsed = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional uint64 upload = 9;
 * @return {number}
 */
proto.score.Node.prototype.getUpload = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setUpload = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 download = 10;
 * @return {number}
 */
proto.score.Node.prototype.getDownload = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setDownload = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 total_upload = 11;
 * @return {number}
 */
proto.score.Node.prototype.getTotalUpload = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setTotalUpload = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 total_download = 12;
 * @return {number}
 */
proto.score.Node.prototype.getTotalDownload = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setTotalDownload = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint64 storage_price_deal = 13;
 * @return {number}
 */
proto.score.Node.prototype.getStoragePriceDeal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setStoragePriceDeal = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 bandwidth_price_deal = 14;
 * @return {number}
 */
proto.score.Node.prototype.getBandwidthPriceDeal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setBandwidthPriceDeal = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional Settings settings = 15;
 * @return {?proto.score.Node.Settings}
 */
proto.score.Node.prototype.getSettings = function() {
  return /** @type{?proto.score.Node.Settings} */ (
    jspb.Message.getWrapperField(this, proto.score.Node.Settings, 15));
};


/**
 * @param {?proto.score.Node.Settings|undefined} value
 * @return {!proto.score.Node} returns this
*/
proto.score.Node.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Node.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double reputation = 16;
 * @return {number}
 */
proto.score.Node.prototype.getReputation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setReputation = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional uint64 blocks_up = 17;
 * @return {number}
 */
proto.score.Node.prototype.getBlocksUp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setBlocksUp = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional uint64 blocks_down = 18;
 * @return {number}
 */
proto.score.Node.prototype.getBlocksDown = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setBlocksDown = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string os_type = 19;
 * @return {string}
 */
proto.score.Node.prototype.getOsType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setOsType = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string arch_type = 20;
 * @return {string}
 */
proto.score.Node.prototype.getArchType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setArchType = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string cpu_info = 21;
 * @return {string}
 */
proto.score.Node.prototype.getCpuInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setCpuInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional uint64 peers_connected = 23;
 * @return {number}
 */
proto.score.Node.prototype.getPeersConnected = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setPeersConnected = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional google.protobuf.Timestamp time_created = 24;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.score.Node.prototype.getTimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 24));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.score.Node} returns this
*/
proto.score.Node.prototype.setTimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.clearTimeCreated = function() {
  return this.setTimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Node.prototype.hasTimeCreated = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string h_val = 25;
 * @return {string}
 */
proto.score.Node.prototype.getHVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.setHVal = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional Geo geo = 26;
 * @return {?proto.score.Node.Geo}
 */
proto.score.Node.prototype.getGeo = function() {
  return /** @type{?proto.score.Node.Geo} */ (
    jspb.Message.getWrapperField(this, proto.score.Node.Geo, 26));
};


/**
 * @param {?proto.score.Node.Geo|undefined} value
 * @return {!proto.score.Node} returns this
*/
proto.score.Node.prototype.setGeo = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.clearGeo = function() {
  return this.setGeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Node.prototype.hasGeo = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional ExperimentalFlags flg = 27;
 * @return {?proto.score.Node.ExperimentalFlags}
 */
proto.score.Node.prototype.getFlg = function() {
  return /** @type{?proto.score.Node.ExperimentalFlags} */ (
    jspb.Message.getWrapperField(this, proto.score.Node.ExperimentalFlags, 27));
};


/**
 * @param {?proto.score.Node.ExperimentalFlags|undefined} value
 * @return {!proto.score.Node} returns this
*/
proto.score.Node.prototype.setFlg = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.score.Node} returns this
 */
proto.score.Node.prototype.clearFlg = function() {
  return this.setFlg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.score.Node.prototype.hasFlg = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * @enum {number}
 */
proto.score.ResponseCode = {
  SUCCESS: 0,
  SIGNATURE_FORMAT_ERROR: 1,
  COMPUTE_ADDRESS_ERROR: 2,
  TIMEOUT_ERROR: 3,
  OTHER_ERROR: 20
};

/**
 * @enum {number}
 */
proto.score.NodeRole = {
  RENTER: 0,
  HOST: 1,
  REPAIRER: 2,
  CHALLENGER: 3,
  NETWORK_CHECKER: 4,
  REPUTATION_CHECKER: 5,
  CDN_PROVIDER: 6,
  OTHER: 20
};

goog.object.extend(exports, proto.score);
